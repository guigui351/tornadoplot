facet_names
vars <- params$settings$dm$baseline_cols[!grepl("DT$", params$settings$dm$baseline_cols)]
labels <-as.character(sapply(vars, function(x) attr(params$data$dm[[x]], "label")))
facet_names <- as.list(setNames(vars, paste0("\"", labels, "\" = \"", vars,  "\"")))
facet_names
facet_names99 <- c("PAH Etiology" = "pahet",
"Age Group (years)" = "agegr",
"Race Group" = "racegr1",
"Site ID" = "siteid",
"Country" = "country",
"Study Status" = "eosstt_s",
"Treatment Status" = "eotstt",
"Study Discontinuation Reason" = "dcsreas",
"Treatment Discontinuation Reason" = "dctreas")
facet_names99
vars <- params$settings$dm$baseline_cols[!grepl("DT$", params$settings$dm$baseline_cols)]
labels <-as.character(sapply(vars, function(x) attr(params$data$dm[[x]], "label")))
facet_names <- setNames(vars, labels)
facet_names
params$data$adex
adex <- params$data$adex
View(adex)
View(adsl_salto)
adsl_swim <- adsl_salto %>%
filter(!is.na(TRT01A)) %>%
group_by(TRT01A) %>%
mutate(n_group = dplyr::n()) %>%
ungroup() %>%
mutate(facet = reorder(TRT01A, desc(n_group)),
rowid = tidytext::reorder_within(rowid, stddurw, TRT01A))
install.packages("tidytext")
# Get adsl and pass input arguments
adsl_swim <- adsl_salto %>%
filter(!is.na(TRT01A)) %>%
group_by(TRT01A) %>%
mutate(n_group = dplyr::n()) %>%
ungroup() %>%
mutate(facet = reorder(TRT01A, desc(n_group)),
rowid = tidytext::reorder_within(rowid, stddurw, TRT01A))
# Get adsl and pass input arguments
adsl_swim <- adsl_salto %>%
tibble::rowid_to_column() %>%
filter(!is.na(TRT01A)) %>%
group_by(TRT01A) %>%
mutate(n_group = dplyr::n()) %>%
ungroup() %>%
mutate(facet = reorder(TRT01A, desc(n_group)),
rowid = tidytext::reorder_within(rowid, stddurw, TRT01A))
# Get adsl and pass input arguments
adsl_swim <- params$data$adsl %>%
tibble::rowid_to_column() %>%
filter(!is.na(TRT01A)) %>%
group_by(TRT01A) %>%
mutate(n_group = dplyr::n()) %>%
ungroup() %>%
mutate(facet = reorder(TRT01A, desc(n_group)),
rowid = tidytext::reorder_within(rowid, stddurw, TRT01A))
# Get adsl and pass input arguments
adsl_swim <- params$data$adsl %>%
tibble::rowid_to_column() %>%
filter(!is.na(TRT01P)) %>%
group_by(TRT01P) %>%
mutate(n_group = dplyr::n()) %>%
ungroup() %>%
mutate(facet = reorder(TRT01P, desc(n_group)),
rowid = tidytext::reorder_within(rowid, stddurw, TRT01P))
# Get adsl and pass input arguments
adsl_swim <- params$data$adsl %>%
tibble::rowid_to_column() %>%
filter(!is.na(TRT01P)) %>%
group_by(TRT01P) %>%
mutate(n_group = dplyr::n()) %>%
ungroup() %>%
select(subjid, rowid, TRT01A, n_group) %>%
dplyr::left_join(adex %>% , by = "USUBJID") %>%
# Get adsl and pass input arguments
adsl_swim <- params$data$adsl %>%
tibble::rowid_to_column() %>%
filter(!is.na(TRT01P)) %>%
group_by(TRT01P) %>%
mutate(n_group = dplyr::n()) %>%
ungroup() %>%
select(subjid, rowid, TRT01A, n_group) %>%
dplyr::left_join(params$data$adex, by = "USUBJID") %>%
mutate(facet = reorder(TRT01P, desc(n_group)),
rowid = tidytext::reorder_within(rowid, STDDURW, TRT01P))
# Get adsl and pass input arguments
adsl_swim <- params$data$adsl %>%
tibble::rowid_to_column() %>%
filter(!is.na(TRT01P)) %>%
group_by(TRT01P) %>%
mutate(n_group = dplyr::n()) %>%
ungroup() %>%
select(USUBJID, rowid, TRT01A, n_group) %>%
dplyr::left_join(params$data$adex, by = "USUBJID") %>%
mutate(facet = reorder(TRT01P, desc(n_group)),
rowid = tidytext::reorder_within(rowid, STDDURW, TRT01P))
# Get adsl and pass input arguments
adsl_swim <- params$data$adsl %>%
tibble::rowid_to_column() %>%
filter(!is.na(TRT01P)) %>%
group_by(TRT01P) %>%
mutate(n_group = dplyr::n()) %>%
ungroup() %>%
select(USUBJID, rowid, TRT01P, n_group) %>%
dplyr::left_join(params$data$adex, by = "USUBJID") %>%
mutate(facet = reorder(TRT01P, desc(n_group)),
rowid = tidytext::reorder_within(rowid, STDDURW, TRT01P))
View(adex)
adsl <- params$data$adsl
View(adsl)
adsl_swim <- params$data$adsl %>%
tibble::rowid_to_column() %>%
filter(!is.na(TRT01P)) %>%
mutate(TRTDURW =  format(round(TRTDURD / 7, digits = 1), nsmall = 1),
STDDURW = if_else(!is.na(EOSDT), format(round(as.numeric((EOSDT - TRTSDT + 1)) / 7, digits = 1), nsmall = 1), NA_character_),
TIM2DTHW = if_else(!is.na(DTHDT), format(round((as.numeric(DTHDT - TRTSDT + 1)) / 7, digits = 1), nsmall = 1), NA_character_)) %>%
mutate(across(ends_with("W"), as.numeric))
View(adsl_swim)
adsl_swim <- params$data$adsl %>%
tibble::rowid_to_column() %>%
filter(!is.na(TRT01P)) %>%
mutate(TRTDURW =  format(round(TRTDURD / 7, digits = 1), nsmall = 1),
STDDURW = if_else(!is.na(EOSDT), format(round(as.numeric((EOSDT - TRTSDT + 1)) / 7, digits = 1), nsmall = 1), NA_character_),
TIM2DTHW = if_else(!is.na(DTHDT), format(round((as.numeric(DTHDT - TRTSDT + 1)) / 7, digits = 1), nsmall = 1), NA_character_))
View(adsl_swim)
adsl_swim <- params$data$adsl %>%
tibble::rowid_to_column() %>%
filter(!is.na(TRT01P)) %>%
mutate(TRTDURW =  format(round(TRTDURD / 7, digits = 1), nsmall = 1),
STDDURW = if_else(!is.na(EOSDT), format(round(as.numeric((LSTALVDT - TRTSDT + 1)) / 7, digits = 1), nsmall = 1), NA_character_),
TIM2DTHW = if_else(!is.na(DTHDT), format(round((as.numeric(DTHDT - TRTSDT + 1)) / 7, digits = 1), nsmall = 1), NA_character_)) %>%
mutate(across(ends_with("W"), as.numeric))
View(adsl_swim)
adsl_swim <- params$data$adsl %>%
tibble::rowid_to_column() %>%
filter(!is.na(TRT01P)) %>%
mutate(TRTDURW =  format(round(TRTDURD / 7, digits = 1), nsmall = 1),
STDDURW = if_else(!is.na(LSTALVDT), format(round(as.numeric((LSTALVDT - TRTSDT + 1)) / 7, digits = 1), nsmall = 1), NA_character_),
TIM2DTHW = if_else(!is.na(DTHDT), format(round((as.numeric(DTHDT - TRTSDT + 1)) / 7, digits = 1), nsmall = 1), NA_character_)) %>%
mutate(across(ends_with("W"), as.numeric))
View(adsl_swim)
adsl_swim <- params$data$adsl %>%
tibble::rowid_to_column() %>%
filter(!is.na(TRT01P)) %>%
mutate(TRTDURW =  format(round(TRTDURD / 7, digits = 1), nsmall = 1),
STDDURW = if_else(!is.na(LSTALVDT), format(round(as.numeric((LSTALVDT - TRTSDT + 1)) / 7, digits = 1), nsmall = 1), NA_character_),
TIM2DTHW = if_else(!is.na(DTHDT), format(round((as.numeric(DTHDT - TRTSDT + 1)) / 7, digits = 1), nsmall = 1), NA_character_)) %>%
mutate(across(ends_with("W"), as.numeric)) %>%
group_by(TRT01P) %>%
mutate(n_group = dplyr::n()) %>%
ungroup() %>%
select(USUBJID, rowid, TRT01P, n_group, TRTDURW, STDDURW, TIM2DTHW) %>%
dplyr::left_join(params$data$adex, by = "USUBJID") %>%
mutate(facet = reorder(TRT01P, desc(n_group)),
rowid = tidytext::reorder_within(rowid, STDDURW, TRT01P))
# Get adsl and pass input arguments
adex_swim <- params$data$adsl %>%
tibble::rowid_to_column() %>%
filter(!is.na(TRT01P)) %>%
mutate(TRTDURW =  format(round(TRTDURD / 7, digits = 1), nsmall = 1),
STDDURW = if_else(!is.na(LSTALVDT), format(round(as.numeric((LSTALVDT - TRTSDT + 1)) / 7, digits = 1), nsmall = 1), NA_character_),
TIM2DTHW = if_else(!is.na(DTHDT), format(round((as.numeric(DTHDT - TRTSDT + 1)) / 7, digits = 1), nsmall = 1), NA_character_)) %>%
mutate(across(ends_with("W"), as.numeric)) %>%
group_by(TRT01P) %>%
mutate(n_group = dplyr::n()) %>%
ungroup() %>%
select(USUBJID, rowid, TRT01P, n_group, TRTDURW, STDDURW, TIM2DTHW)
adex_swim <- adsl_swim%>%
dplyr::left_join(params$data$adex, by = "USUBJID") %>%
mutate(facet = reorder(TRT01P, desc(n_group)),
rowid = tidytext::reorder_within(rowid, STDDURW, TRT01P))
View(adex_swim)
adsl_swim <- params$data$adsl %>%
tibble::rowid_to_column() %>%
filter(!is.na(TRT01P)) %>%
mutate(TRTDURW =  format(round(TRTDURD / 7, digits = 1), nsmall = 1),
STDDURW = if_else(!is.na(LSTALVDT), format(round(as.numeric((LSTALVDT - TRTSDT + 1)) / 7, digits = 1), nsmall = 1), NA_character_),
TIM2DTHW = if_else(!is.na(DTHDT), format(round((as.numeric(DTHDT - TRTSDT + 1)) / 7, digits = 1), nsmall = 1), NA_character_)) %>%
mutate(across(ends_with("W"), as.numeric)) %>%
group_by(TRT01P) %>%
mutate(n_group = dplyr::n()) %>%
ungroup() %>%
select(USUBJID, rowid, TRT01P, n_group, TRTDURW, STDDURW, TIM2DTHW)
adex_swim <- adsl_swim %>%
dplyr::left_join(params$data$adex, by = "USUBJID") %>%
mutate(facet = reorder(TRT01P, desc(n_group)),
rowid = tidytext::reorder_within(rowid, STDDURW, TRT01P))
View(adex_swim)
ggplot2::ggplot(adsl_swim) +
# Plot study duration of each participant
geom_segment(
data = adsl_swim,
ggplot2::aes(x = 1, xend = STDDURW, y = rowid, yend = rowid,
color =  colorspace::darken("#f3e9d2",0.05)),
#alpha = 0.5,
arrow = NULL,
arrow.fill = NULL,
lineend = 'round',
size = 6
) +
# Plot treatment duration over time of each participant
geom_segment(
data = adex_swim,
ggplot2::aes(x = EXSTDY, xend = EXENDY, y = rowid, yend = rowid, color = dose_color),
#alpha = 0.5,
arrow = NULL,
arrow.fill = NULL,
lineend = 'butt',
linejoin = 'round',
size = 6
)
library(ggplot2)
ggplot2::ggplot(adsl_swim) +
# Plot study duration of each participant
geom_segment(
data = adsl_swim,
ggplot2::aes(x = 1, xend = STDDURW, y = rowid, yend = rowid,
color =  colorspace::darken("#f3e9d2",0.05)),
#alpha = 0.5,
arrow = NULL,
arrow.fill = NULL,
lineend = 'round',
size = 6
) +
# Plot treatment duration over time of each participant
geom_segment(
data = adex_swim,
ggplot2::aes(x = EXSTDY, xend = EXENDY, y = rowid, yend = rowid, color = dose_color),
#alpha = 0.5,
arrow = NULL,
arrow.fill = NULL,
lineend = 'butt',
linejoin = 'round',
size = 6
)
ggplot2::ggplot(adsl_swim) +
# Plot study duration of each participant
geom_segment(
data = adsl_swim,
ggplot2::aes(x = 1, xend = STDDURW, y = rowid, yend = rowid,
color =  colorspace::darken("#f3e9d2",0.05)),
#alpha = 0.5,
arrow = NULL,
arrow.fill = NULL,
lineend = 'round',
linewidth = 6
) +
# Plot treatment duration over time of each participant
geom_segment(
data = adex_swim,
ggplot2::aes(x = EXSTDY, xend = EXENDY, y = rowid, yend = rowid, color = dose_color),
#alpha = 0.5,
arrow = NULL,
arrow.fill = NULL,
lineend = 'butt',
linejoin = 'round',
linewidth = 6
)
ggplot2::ggplot(adsl_swim) +
# Plot study duration of each participant
geom_segment(
data = adsl_swim,
ggplot2::aes(x = 1, xend = STDDURW, y = rowid, yend = rowid,
color =  colorspace::darken("#f3e9d2",0.05)),
#alpha = 0.5,
arrow = NULL,
arrow.fill = NULL,
lineend = 'round',
linewidth = 6
)
ggplot2::ggplot(adsl_swim) +
# Plot study duration of each participant
geom_segment(
data = adsl_swim,
ggplot2::aes(x = 1, xend = STDDURW, y = rowid, yend = rowid,
color =  colorspace::darken("#f3e9d2",0.05)),
#alpha = 0.5,
arrow = NULL,
arrow.fill = NULL,
lineend = 'round',
linewidth = 4
) +
# Plot treatment duration over time of each participant
geom_segment(
data = adex_swim,
ggplot2::aes(x = EXSTDY, xend = EXENDY, y = rowid, yend = rowid, color = dose_color),
#alpha = 0.5,
arrow = NULL,
arrow.fill = NULL,
lineend = 'butt',
linejoin = 'round',
linewidth = 4
)
gc()
memory.limit()
memory.size()
gc()
library(dplyr)
library(haven)
#library(safetyData)
options(
repos = c(
pharmaverse = 'https://pharmaverse.r-universe.dev',
CRAN = 'https://cloud.r-project.org'
)
)
# EOSSTT mapping
format_eoxxstt <- function(x) {
dplyr::case_when(
x %in% c("COMPLETED") ~ "Completed",
!(x %in% c("COMPLETED", "SCREEN FAILURE")) & !is.na(x) ~ "Discontinued",
x %in% c("SCREEN FAILURE") ~ NA_character_,
TRUE ~ "Ongoing"
)
}
# EOSSTT mapping
format_eoxxstt <- function(x) {
dplyr::case_when(
x %in% c("COMPLETED") ~ "Completed",
!(x %in% c("COMPLETED", "SCREEN FAILURE")) & !is.na(x) ~ "Discontinued",
x %in% c("SCREEN FAILURE") ~ NA_character_,
TRUE ~ "Ongoing"
)
}
# Settings for SALTO study
settings <-list(
dm=list(id_col="USUBJID",
treatment_col="ARM",
"treatment_values"=list(group1="Placebo", "group2"="Selexipag"),
baseline_cols = c("AGE", "RACE", "ETHNIC", "TRTEDT", "LSTALVDT", "WGHTGR1N", "WGHTGR1", "REGION1", "REGION2"),
cutoff_val="2023-01-18"),
ds=list(id_col="USUBJID",
dsdtc_col="DSSTDTC",
filter_scrdt="DSCAT == 'DISPOSITION EVENT' & DSDECOD == 'SCREEN FAILURE'",
filter_eosdt="DSCAT == 'DISPOSITION EVENT' & DSDECOD != 'SCREEN FAILURE' & DSSCAT == 'TRIAL'",
filter_eotdt="DSCAT == 'DISPOSITION EVENT' & DSDECOD != 'SCREEN FAILURE' & DSSCAT == 'SELEXIPAG OR PLACEBO'",
filter_randdt="DSDECOD == 'RANDOMIZED'"
)
)
dm <- read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/dm.sas7bdat") %>%
#filter(ARMCD != 'SCRNFAIL' & ARMCD != 'NOTASSGN') %>%
mutate(ARMCD = if_else(RACE == "WHITE", "SEL", "PLB"),
ARM = if_else(RACE == "WHITE", "Selexipag", "Placebo"))
adsl_salto <- read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/re_fl1/analysis/adsl.sas7bdat")
dm <- dm %>%
select(-c(ARM, ARMCD)) %>%
inner_join(adsl_salto %>% select(USUBJID, TRT01P, starts_with("REGION"), starts_with("STRAT"), TRTEDT, LSTALVDT, WGHTGR1N, WGHTGR1), by = "USUBJID") %>%
mutate(ARM = TRT01P, ARMCD = TRT01P)
group_dose <- data.frame(groupvar = rep("WGHTGR1N", 24),
groupval = rep(c(1, 2, 3), each = 8),
dose_regimen = c(c(100,200,300,400,500,600,700,800),
c(150,300,450,600,750,900,1050,1200),
c(200,400,600,800,1000,1200,1400,1600)))
# params to be loaded in the studytracker app / mandatory to load all these sdtm datasets mentionned below
params <- list(data = list(dm  = dm,
aes =  read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/ae.sas7bdat"),
ex  =  read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/ex.sas7bdat"),
ds  =  read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/ds.sas7bdat"),
lb  =  read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/lb.sas7bdat"),
group_dose = group_dose),
settings = settings)
# standalone tornadoplot / params parameter automatically called by the run_app function
tornadoplot::run_app()
library(tornadoplot)
install.packages("~/tornadoplot_0.0.0.9000.tar.gz", repos = NULL, type = "source")
# standalone tornadoplot / params parameter automatically called by the run_app function
tornadoplot::run_app()
library(dplyr)
library(haven)
#library(safetyData)
options(
repos = c(
pharmaverse = 'https://pharmaverse.r-universe.dev',
CRAN = 'https://cloud.r-project.org'
)
)
# EOSSTT mapping
format_eoxxstt <- function(x) {
dplyr::case_when(
x %in% c("COMPLETED") ~ "Completed",
!(x %in% c("COMPLETED", "SCREEN FAILURE")) & !is.na(x) ~ "Discontinued",
x %in% c("SCREEN FAILURE") ~ NA_character_,
TRUE ~ "Ongoing"
)
}
# EOSSTT mapping
format_eoxxstt <- function(x) {
dplyr::case_when(
x %in% c("COMPLETED") ~ "Completed",
!(x %in% c("COMPLETED", "SCREEN FAILURE")) & !is.na(x) ~ "Discontinued",
x %in% c("SCREEN FAILURE") ~ NA_character_,
TRUE ~ "Ongoing"
)
}
# Settings for SALTO study
settings <-list(
dm=list(id_col="USUBJID",
treatment_col="ARM",
"treatment_values"=list(group1="Placebo", "group2"="Selexipag"),
baseline_cols = c("AGE", "RACE", "ETHNIC", "TRTEDT", "LSTALVDT", "WGHTGR1N", "WGHTGR1", "REGION1", "REGION2"),
cutoff_val="2023-01-18"),
ds=list(id_col="USUBJID",
dsdtc_col="DSSTDTC",
filter_scrdt="DSCAT == 'DISPOSITION EVENT' & DSDECOD == 'SCREEN FAILURE'",
filter_eosdt="DSCAT == 'DISPOSITION EVENT' & DSDECOD != 'SCREEN FAILURE' & DSSCAT == 'TRIAL'",
filter_eotdt="DSCAT == 'DISPOSITION EVENT' & DSDECOD != 'SCREEN FAILURE' & DSSCAT == 'SELEXIPAG OR PLACEBO'",
filter_randdt="DSDECOD == 'RANDOMIZED'"
)
)
dm <- read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/dm.sas7bdat") %>%
#filter(ARMCD != 'SCRNFAIL' & ARMCD != 'NOTASSGN') %>%
mutate(ARMCD = if_else(RACE == "WHITE", "SEL", "PLB"),
ARM = if_else(RACE == "WHITE", "Selexipag", "Placebo"))
adsl_salto <- read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/re_fl1/analysis/adsl.sas7bdat")
dm <- dm %>%
select(-c(ARM, ARMCD)) %>%
inner_join(adsl_salto %>% select(USUBJID, TRT01P, starts_with("REGION"), starts_with("STRAT"), TRTEDT, LSTALVDT, WGHTGR1N, WGHTGR1), by = "USUBJID") %>%
mutate(ARM = TRT01P, ARMCD = TRT01P)
group_dose <- data.frame(groupvar = rep("WGHTGR1N", 24),
groupval = rep(c(1, 2, 3), each = 8),
dose_regimen = c(c(100,200,300,400,500,600,700,800),
c(150,300,450,600,750,900,1050,1200),
c(200,400,600,800,1000,1200,1400,1600)))
# params to be loaded in the studytracker app / mandatory to load all these sdtm datasets mentionned below
params <- list(data = list(dm  = dm,
aes =  read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/ae.sas7bdat"),
ex  =  read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/ex.sas7bdat"),
ds  =  read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/ds.sas7bdat"),
lb  =  read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/lb.sas7bdat"),
group_dose = group_dose),
settings = settings)
# call individual init functions to access data
params <- init_params(data=params$data, settings=params$settings)
library(dplyr)
library(haven)
#library(safetyData)
options(
repos = c(
pharmaverse = 'https://pharmaverse.r-universe.dev',
CRAN = 'https://cloud.r-project.org'
)
)
# EOSSTT mapping
format_eoxxstt <- function(x) {
dplyr::case_when(
x %in% c("COMPLETED") ~ "Completed",
!(x %in% c("COMPLETED", "SCREEN FAILURE")) & !is.na(x) ~ "Discontinued",
x %in% c("SCREEN FAILURE") ~ NA_character_,
TRUE ~ "Ongoing"
)
}
# EOSSTT mapping
format_eoxxstt <- function(x) {
dplyr::case_when(
x %in% c("COMPLETED") ~ "Completed",
!(x %in% c("COMPLETED", "SCREEN FAILURE")) & !is.na(x) ~ "Discontinued",
x %in% c("SCREEN FAILURE") ~ NA_character_,
TRUE ~ "Ongoing"
)
}
# Settings for SALTO study
settings <-list(
dm=list(id_col="USUBJID",
treatment_col="ARM",
"treatment_values"=list(group1="Placebo", "group2"="Selexipag"),
baseline_cols = c("AGE", "RACE", "ETHNIC", "TRTEDT", "LSTALVDT", "WGHTGR1N", "WGHTGR1", "REGION1", "REGION2"),
cutoff_val="2023-01-18"),
ds=list(id_col="USUBJID",
dsdtc_col="DSSTDTC",
filter_scrdt="DSCAT == 'DISPOSITION EVENT' & DSDECOD == 'SCREEN FAILURE'",
filter_eosdt="DSCAT == 'DISPOSITION EVENT' & DSDECOD != 'SCREEN FAILURE' & DSSCAT == 'TRIAL'",
filter_eotdt="DSCAT == 'DISPOSITION EVENT' & DSDECOD != 'SCREEN FAILURE' & DSSCAT == 'SELEXIPAG OR PLACEBO'",
filter_randdt="DSDECOD == 'RANDOMIZED'"
)
)
dm <- read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/dm.sas7bdat") %>%
#filter(ARMCD != 'SCRNFAIL' & ARMCD != 'NOTASSGN') %>%
mutate(ARMCD = if_else(RACE == "WHITE", "SEL", "PLB"),
ARM = if_else(RACE == "WHITE", "Selexipag", "Placebo"))
adsl_salto <- read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/re_fl1/analysis/adsl.sas7bdat")
dm <- dm %>%
select(-c(ARM, ARMCD)) %>%
inner_join(adsl_salto %>% select(USUBJID, TRT01P, starts_with("REGION"), starts_with("STRAT"), TRTEDT, LSTALVDT, WGHTGR1N, WGHTGR1), by = "USUBJID") %>%
mutate(ARM = TRT01P, ARMCD = TRT01P)
group_dose <- data.frame(groupvar = rep("WGHTGR1N", 24),
groupval = rep(c(1, 2, 3), each = 8),
dose_regimen = c(c(100,200,300,400,500,600,700,800),
c(150,300,450,600,750,900,1050,1200),
c(200,400,600,800,1000,1200,1400,1600)))
# params to be loaded in the studytracker app / mandatory to load all these sdtm datasets mentionned below
params <- list(data = list(dm  = dm,
aes =  read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/ae.sas7bdat"),
ex  =  read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/ex.sas7bdat"),
ds  =  read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/ds.sas7bdat"),
lb  =  read_sas("/adr/PREPROD/pharma/jnj-67896049/a310/dbr_fl1/_source/lb.sas7bdat"),
group_dose = group_dose),
settings = settings)
# standalone tornadoplot / params parameter automatically called by the run_app function
tornadoplot::run_app()
# Set options here
options(golem.app.prod = FALSE) # TRUE = production mode, FALSE = development mode
# Comment this if you don't want the app to be served on a random port
options(shiny.port = httpuv::randomPort())
# Detach all loaded packages and clean your environment
golem::detach_all_attached()
# rm(list=ls(all.names = TRUE))
# Document and reload your package
golem::document_and_reload()
# Run the application
options(shiny.trace=FALSE)
run_app()
